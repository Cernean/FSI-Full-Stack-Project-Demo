[{"/Users/joshua.miles/Documents/1.13-demo/frontend/src/App.js":"1","/Users/joshua.miles/Documents/1.13-demo/frontend/src/index.js":"2","/Users/joshua.miles/Documents/1.13-demo/frontend/src/state/reducer.js":"3","/Users/joshua.miles/Documents/1.13-demo/frontend/src/state/initialState.js":"4","/Users/joshua.miles/Documents/1.13-demo/frontend/src/AppRouter.js":"5","/Users/joshua.miles/Documents/1.13-demo/frontend/src/views/LoginView.js":"6","/Users/joshua.miles/Documents/1.13-demo/frontend/src/views/CreateAccountView.js":"7","/Users/joshua.miles/Documents/1.13-demo/frontend/src/NavBar.js":"8","/Users/joshua.miles/Documents/1.13-demo/frontend/src/views/InboxView.js":"9","/Users/joshua.miles/Documents/1.13-demo/frontend/src/views/ComposeMessageView.js":"10","/Users/joshua.miles/Documents/1.13-demo/frontend/src/MessageActionBar.js":"11","/Users/joshua.miles/Documents/1.13-demo/frontend/src/_constants.js":"12"},{"size":406,"mtime":1610470015429,"results":"13","hashOfConfig":"14"},{"size":169,"mtime":1610465537742,"results":"15","hashOfConfig":"14"},{"size":2869,"mtime":1610670306587,"results":"16","hashOfConfig":"14"},{"size":110,"mtime":1610568679448,"results":"17","hashOfConfig":"14"},{"size":2132,"mtime":1610669217981,"results":"18","hashOfConfig":"14"},{"size":3782,"mtime":1610669887209,"results":"19","hashOfConfig":"14"},{"size":4498,"mtime":1610669870023,"results":"20","hashOfConfig":"14"},{"size":1143,"mtime":1610669783635,"results":"21","hashOfConfig":"14"},{"size":3018,"mtime":1610676756040,"results":"22","hashOfConfig":"14"},{"size":4157,"mtime":1610676848502,"results":"23","hashOfConfig":"14"},{"size":2802,"mtime":1610668093710,"results":"24","hashOfConfig":"14"},{"size":50,"mtime":1610468571360,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"couutb",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joshua.miles/Documents/1.13-demo/frontend/src/App.js",["58"],"/Users/joshua.miles/Documents/1.13-demo/frontend/src/index.js",[],["59","60"],"/Users/joshua.miles/Documents/1.13-demo/frontend/src/state/reducer.js",["61","62"],"/Users/joshua.miles/Documents/1.13-demo/frontend/src/state/initialState.js",[],"/Users/joshua.miles/Documents/1.13-demo/frontend/src/AppRouter.js",["63"],"/Users/joshua.miles/Documents/1.13-demo/frontend/src/views/LoginView.js",["64","65"],"import { TextField, Button, LinearProgress, Card, FormHelperText, Typography } from '@material-ui/core'\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router'\nimport { BACKEND_URL } from '../_constants'\n\nexport function LoginView() {\n\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [status, setStatus] = useState(null)\n    const [error, setError] = useState(null)\n\n    async function login() {\n        setStatus('pending')\n        let response = await fetch(`${BACKEND_URL}/auth`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ username, password })\n        })\n        let result = await response.json()\n        if (result.error) {\n            setStatus(null)\n            setError(result.error)\n        } else {\n            setStatus('success')\n            localStorage.setItem('token', result.token)\n            dispatch({ type: 'LOGIN', user: result.user })\n        }\n    }\n\n    return (\n        <div style={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <div style={{ flex: 1, maxWidth: 500 }}>\n                <Card>\n                    {status === 'pending' &&\n                        <LinearProgress />\n                    }\n                    <div style={{ padding: '4%' }}>\n                        <Typography variant=\"h6\" style={{ marginBottom: '4%' }}>\n                            HackerMail\n                        </Typography>\n                        <TextField\n                            error={error?.username?.message}\n                            helperText={error?.username?.message}\n                            disabled={status !== null}\n                            style={{ marginBottom: '4%' }}\n                            value={username}\n                            onChange={e => setUsername(e.target.value)}\n                            id=\"username\"\n                            label=\"Username\"\n                            variant=\"filled\"\n                            fullWidth={true}\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            error={error?.password?.message}\n                            helperText={error?.password?.message}\n                            value={password}\n                            disabled={status !== null}\n                            onChange={e => setPassword(e.target.value)}\n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Password\"\n                            variant=\"filled\"\n                            fullWidth={true}\n                            variant=\"outlined\"\n                        />\n                        {error?.message &&\n                            <FormHelperText error={true}>\n                                {error.message}\n                            </FormHelperText>\n                        }\n                        <Button disabled={status !== null} color=\"primary\" onClick={() => history.push('/create-account')}>\n                            Create Account\n                        </Button>\n                        <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n                            <Button disabled={status !== null} variant=\"contained\" color=\"primary\" onClick={login}>\n                                Login\n                            </Button>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    )\n}","/Users/joshua.miles/Documents/1.13-demo/frontend/src/views/CreateAccountView.js",["66","67","68"],"import { TextField, Button, LinearProgress, Card, FormHelperText, Typography } from '@material-ui/core'\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router'\nimport { BACKEND_URL } from '../_constants'\n\nexport function CreateAccountView() {\n\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState('')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [status, setStatus] = useState(null)\n    const [error, setError] = useState(null)\n\n    async function createAccount() {\n        setStatus('pending')\n        let response = await fetch(`${BACKEND_URL}/users`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ name, username, password })\n        })\n        let result = await response.json()\n        if (result.error) {\n            setStatus(null)\n            setError(result.error)\n        } else {\n            setStatus('success')\n            localStorage.setItem('token', result.token)\n            dispatch({ type: 'LOGIN', user: result.user })\n        }\n    }\n\n    return (\n        <div style={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <div style={{ flex: 1, maxWidth: 500 }}>\n\n                <Card>\n                    {status === 'pending' &&\n                        <LinearProgress />\n                    }\n\n                    <div style={{ padding: '4%' }}>\n                        <Typography variant=\"h6\" style={{ marginBottom: '4%' }}>\n                            HackerMail\n                        </Typography>\n                        <TextField\n                            error={error?.name?.message}\n                            helperText={error?.name?.message}\n                            disabled={status !== null}\n                            style={{ marginBottom: '4%' }}\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                            id=\"name\"\n                            label=\"Name\"\n                            variant=\"filled\"\n                            fullWidth={true}\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            error={error?.username?.message}\n                            helperText={error?.username?.message}\n                            disabled={status !== null}\n                            style={{ marginBottom: '4%' }}\n                            value={username}\n                            onChange={e => setUsername(e.target.value)}\n                            id=\"username\"\n                            label=\"Username\"\n                            variant=\"filled\"\n                            fullWidth={true}\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            error={error?.passwordDigest?.message}\n                            helperText={error?.passwordDigest?.message}\n                            value={password}\n                            disabled={status !== null}\n                            onChange={e => setPassword(e.target.value)}\n                            type=\"password\"\n                            id=\"password\"\n                            label=\"Password\"\n                            variant=\"filled\"\n                            fullWidth={true}\n                            variant=\"outlined\"\n                        />\n                        {error?.message &&\n                            <FormHelperText error={true}>\n                                {error.message}\n                            </FormHelperText>\n                        }\n                        <Button disabled={status !== null} color=\"primary\" onClick={() => history.push('/login')}>\n                            Already have an account?\n                        </Button>\n                        <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n                            <Button disabled={status !== null} variant=\"contained\" color=\"primary\" onClick={createAccount}>\n                                Create Account\n                            </Button>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    )\n}","/Users/joshua.miles/Documents/1.13-demo/frontend/src/NavBar.js",["69"],"import { createRef, useState } from 'react'\nimport { AppBar, Avatar, Menu, MenuItem, Typography } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport function NavBar() {\n    const currentUser = useSelector(state => state.currentUser)\n    const dispatch = useDispatch()\n    const [avatar, setAvatar] = useState(null)\n    return (\n        <AppBar style={{ display: 'flex', flexDirection: 'row', padding: 10, position: 'static' }}>\n            <Typography variant=\"h6\" style={{ marginLeft: 10, marginTop: 5, flexGrow: 1}}>\n                HackerMail\n            </Typography>\n            <Avatar onClick={(e) => setAvatar(e.target)} style={{ cursor: 'pointer', backgroundColor: '#ff5722', }}>\n                {currentUser.name.slice(0, 1)}\n            </Avatar>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={avatar}\n                keepMounted\n                open={Boolean(avatar)}\n                onClose={() => setAvatar(null)}\n            >\n                <MenuItem onClick={() => dispatch({ type: 'LOGOUT' })}>Logout</MenuItem>\n            </Menu>\n        </AppBar>\n    )\n}","/Users/joshua.miles/Documents/1.13-demo/frontend/src/views/InboxView.js",["70"],"import { Avatar, Fab, Icon, List, ListItem, ListItemIcon, ListItemText, ListItemSecondaryAction } from \"@material-ui/core\";\nimport EditIcon from '@material-ui/icons/Edit'\nimport CheckIcon from '@material-ui/icons/Check'\n\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MessageActionBar } from \"../MessageActionBar\";\n\nexport function InboxView() {\n    const dispatch = useDispatch()\n    const currentUser = useSelector(state => state.currentUser)\n    const selectedMessageIds = useSelector(state => state.selectedMessageIds)\n\n    function toggleMessage(id, e) {\n        e.stopPropagation()\n        if (selectedMessageIds.includes(id)) {\n            dispatch({ type: 'UNSELECT_MESSAGE', id })\n        } else {\n            dispatch({ type: 'SELECT_MESSAGE', id })\n        }\n    }\n\n    function unSelectAll() {\n        dispatch({ type: 'UNSELECT_ALL_MESSAGES' })\n    }\n\n    return (\n        <div style={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\n            <MessageActionBar />\n            <div style={{ flex: 1 }} onClick={unSelectAll}>\n                <List style={{ width: '80vw', left: '10vw' }}>\n                    {currentUser.inbox.map(message => (\n                        <MessageCard key={message._id} message={message} onClick={(e) => toggleMessage(message._id, e)} />\n                    ))}\n                </List>\n                <Fab color=\"primary\" style={{ position: 'absolute', bottom: 50, right: 50 }} onClick={() => dispatch({ type: 'OPEN_COMPOSE_MODAL' })}>\n                    <EditIcon />\n                </Fab>\n            </div>\n        </div>\n    )\n}\n\nfunction MessageCard(props) {\n    const message = props.message\n    const selectedMessageIds = useSelector(state => state.selectedMessageIds)\n    const sent = formatDate(message.sent)\n    const defaultColor = message.isRead ? undefined : '#000000'\n    return (\n        <ListItem style={{ cursor: 'pointer' }} onClick={props.onClick}>\n            <ListItemIcon>\n                <Avatar style={{ backgroundColor: selectedMessageIds.includes(message._id) ? '#3f51b5' : defaultColor }}>\n                    {selectedMessageIds.includes(message._id)\n                        ? <CheckIcon />\n                        : message.from.slice(0, 1)\n                    }\n                </Avatar>\n            </ListItemIcon>\n            <ListItemText\n                style={{ maxWidth: '80%', userSelect: 'none' }}\n                primary={(\n                    <span style={{ fontWeight: message.isRead ? 'normal' : 'bold' }}>\n                        {message.from}: {message.subject}\n                    </span>\n                )}\n                secondary={message.content}\n            />\n            <ListItemSecondaryAction>\n                <ListItemText\n                    secondary={sent}\n                />\n            </ListItemSecondaryAction>\n        </ListItem>\n    )\n}\n\nfunction formatDate(dateStr) {\n    let date = new Date(dateStr)\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`\n}",["71","72"],"/Users/joshua.miles/Documents/1.13-demo/frontend/src/views/ComposeMessageView.js",["73","74","75","76","77","78"],"import { TextField, Button, LinearProgress, Card, FormHelperText, Modal, Typography, Drawer } from '@material-ui/core'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router'\nimport { BACKEND_URL } from '../_constants'\n\nexport function ComposeMessageView() {\n\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const composeModalOpen = useSelector(state => state.composeModalOpen)\n\n    const [username, setUsername] = useState('')\n    const [subject, setSubject] = useState('')\n    const [content, setContent] = useState('\\n\\n\\n')\n    const [status, setStatus] = useState(null)\n    const [error, setError] = useState(null)\n\n    async function createAccount() {\n        setStatus('pending')\n        let token = localStorage.getItem('token')\n        let response = await fetch(`${BACKEND_URL}/messages`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({ username, subject, content })\n        })\n        let result = await response.json()\n        if (result.error) {\n            setStatus(null)\n            setError(result.error)\n        } else {\n            setUsername('')\n            setSubject('')\n            setContent('\\n\\n\\n')\n            setStatus(null)\n            dispatch({ type: 'CLOSE_COMPOSE_MODAL' })\n            // dispatch({ type: 'LOGIN', user: result.user })\n        }\n    }\n\n    return (\n        <Drawer anchor=\"right\" open={composeModalOpen} onClose={() => dispatch({ type: 'CLOSE_COMPOSE_MODAL' })}>\n            {status === 'pending' &&\n                <LinearProgress />\n            }\n            <div style={{ padding: '4%' }}>\n                <Typography variant=\"h5\" component=\"h1\" style={{ marginBottom: 15 }}>\n                    Compose Message:\n                    </Typography>\n                <TextField\n                    error={error?.username?.message}\n                    helperText={error?.username?.message}\n                    disabled={status !== null}\n                    style={{ marginBottom: '4%' }}\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                    id=\"username\"\n                    label=\"To\"\n                    placeholder=\"Username\"\n                    variant=\"filled\"\n                    fullWidth={true}\n                    variant=\"outlined\"\n                />\n                <TextField\n                    error={error?.subject?.message}\n                    helperText={error?.subject?.message}\n                    disabled={status !== null}\n                    style={{ marginBottom: '4%' }}\n                    value={subject}\n                    onChange={e => setSubject(e.target.value)}\n                    id=\"subject\"\n                    label=\"Subject\"\n                    variant=\"filled\"\n                    fullWidth={true}\n                    variant=\"outlined\"\n                />\n                <TextField\n                    error={error?.content?.message}\n                    helperText={error?.content?.message}\n                    value={content}\n                    disabled={status !== null}\n                    onChange={e => setContent(e.target.value)}\n                    type=\"content\"\n                    id=\"content\"\n                    label=\"Content\"\n                    variant=\"filled\"\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    multiline={true}\n                />\n                {error?.message &&\n                    <FormHelperText error={true}>\n                        {error.message}\n                    </FormHelperText>\n                }\n                <div style={{ display: 'flex', flexDirection: 'row-reverse', marginTop: '4%' }}>\n                    <Button icon=\"send\" disabled={status !== null} variant=\"contained\" color=\"primary\" onClick={createAccount}>\n                        Send\n                    </Button>\n                </div>\n            </div>\n        </Drawer>\n    )\n}",["79","80"],"/Users/joshua.miles/Documents/1.13-demo/frontend/src/MessageActionBar.js",[],"/Users/joshua.miles/Documents/1.13-demo/frontend/src/_constants.js",[],{"ruleId":"81","severity":1,"message":"82","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":19},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":4,"column":5,"nodeType":"91","messageId":"92","endLine":85,"endColumn":6},{"ruleId":"93","severity":1,"message":"94","line":37,"column":85,"nodeType":"95","messageId":"96","endLine":37,"endColumn":87},{"ruleId":"97","severity":1,"message":"98","line":36,"column":8,"nodeType":"99","endLine":36,"endColumn":10,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":59,"column":29,"nodeType":"103","endLine":59,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":72,"column":29,"nodeType":"103","endLine":72,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":62,"column":29,"nodeType":"103","endLine":62,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":75,"column":29,"nodeType":"103","endLine":75,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":88,"column":29,"nodeType":"103","endLine":88,"endColumn":47},{"ruleId":"81","severity":1,"message":"104","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":19},{"ruleId":"81","severity":1,"message":"105","line":1,"column":23,"nodeType":"83","messageId":"84","endLine":1,"endColumn":27},{"ruleId":"85","replacedBy":"106"},{"ruleId":"87","replacedBy":"107"},{"ruleId":"81","severity":1,"message":"108","line":1,"column":45,"nodeType":"83","messageId":"84","endLine":1,"endColumn":49},{"ruleId":"81","severity":1,"message":"109","line":1,"column":67,"nodeType":"83","messageId":"84","endLine":1,"endColumn":72},{"ruleId":"81","severity":1,"message":"110","line":9,"column":11,"nodeType":"83","messageId":"84","endLine":9,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":66,"column":21,"nodeType":"103","endLine":66,"endColumn":39},{"ruleId":"101","severity":1,"message":"102","line":79,"column":21,"nodeType":"103","endLine":79,"endColumn":39},{"ruleId":"101","severity":1,"message":"102","line":92,"column":21,"nodeType":"103","endLine":92,"endColumn":39},{"ruleId":"85","replacedBy":"111"},{"ruleId":"87","replacedBy":"112"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveLoggedInUser'. Either include it or remove the dependency array.","ArrayExpression",["115"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'createRef' is defined but never used.","'Icon' is defined but never used.",["113"],["114"],"'Card' is defined but never used.","'Modal' is defined but never used.","'history' is assigned a value but never used.",["113"],["114"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [retrieveLoggedInUser]",{"range":"118","text":"119"},[1211,1213],"[retrieveLoggedInUser]"]